{"version":3,"file":"pagination.d.ts","sources":["/Users/jediblue/Workspace/projects/js/angular/thales-leite/node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination.d.ts"],"sourcesContent":["import { EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NgbPaginationConfig } from './pagination-config';\n/**\n * Context for the pagination 'first', 'previous', 'next', 'last' or 'ellipsis' cell\n * in case you want to override one\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n    /**\n     * Page number currently selected\n     */\n    currentPage: number;\n    /**\n     * If true the link in question is disabled\n     */\n    disabled: boolean;\n}\n/**\n * Context for the pagination 'number' cell in case you want to override one.\n * Extends 'NgbPaginationLinkContext'\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n    /**\n     * Page number displayed by the current cell\n     */\n    $implicit: number;\n}\n/**\n * The directive to match the 'ellipsis' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationEllipsis {\n    templateRef: TemplateRef<NgbPaginationLinkContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationLinkContext>);\n}\n/**\n * The directive to match the 'first' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationFirst {\n    templateRef: TemplateRef<NgbPaginationLinkContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationLinkContext>);\n}\n/**\n * The directive to match the 'last' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationLast {\n    templateRef: TemplateRef<NgbPaginationLinkContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationLinkContext>);\n}\n/**\n * The directive to match the 'next' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationNext {\n    templateRef: TemplateRef<NgbPaginationLinkContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationLinkContext>);\n}\n/**\n * The directive to match the page 'number' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationNumber {\n    templateRef: TemplateRef<NgbPaginationNumberContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationNumberContext>);\n}\n/**\n * The directive to match the 'previous' cell template\n *\n * @since 4.1.0\n */\nexport declare class NgbPaginationPrevious {\n    templateRef: TemplateRef<NgbPaginationLinkContext>;\n    constructor(templateRef: TemplateRef<NgbPaginationLinkContext>);\n}\n/**\n * A component that displays page numbers and allows to customize them in several ways\n */\nexport declare class NgbPagination implements OnChanges {\n    pageCount: number;\n    pages: number[];\n    tplEllipsis: NgbPaginationEllipsis;\n    tplFirst: NgbPaginationFirst;\n    tplLast: NgbPaginationLast;\n    tplNext: NgbPaginationNext;\n    tplNumber: NgbPaginationNumber;\n    tplPrevious: NgbPaginationPrevious;\n    /**\n     * Whether to disable buttons from user input\n     */\n    disabled: boolean;\n    /**\n     *  Whether to show the \"First\" and \"Last\" page links\n     */\n    boundaryLinks: boolean;\n    /**\n     *  Whether to show the \"Next\" and \"Previous\" page links\n     */\n    directionLinks: boolean;\n    /**\n     *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n     */\n    ellipses: boolean;\n    /**\n     *  Whether to rotate pages when maxSize > number of pages.\n     *  Current page will be in the middle\n     */\n    rotate: boolean;\n    /**\n     *  Number of items in collection.\n     */\n    collectionSize: number;\n    /**\n     *  Maximum number of pages to display.\n     */\n    maxSize: number;\n    /**\n     *  Current page. Page numbers start with 1\n     */\n    page: number;\n    /**\n     *  Number of items per page.\n     */\n    pageSize: number;\n    /**\n     *  An event fired when the page is changed.\n     *  Event's payload equals to the newly selected page.\n     *  Will fire only if collection size is set and all values are valid.\n     *  Page numbers start with 1\n     */\n    pageChange: EventEmitter<number>;\n    /**\n     * Pagination display size: small or large\n     */\n    size: 'sm' | 'lg';\n    constructor(config: NgbPaginationConfig);\n    hasPrevious(): boolean;\n    hasNext(): boolean;\n    nextDisabled(): boolean;\n    previousDisabled(): boolean;\n    selectPage(pageNumber: number): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    isEllipsis(pageNumber: any): boolean;\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    private _applyEllipses;\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    private _applyRotation;\n    /**\n     * Paginates page numbers based on maxSize items per page\n     */\n    private _applyPagination;\n    private _setPageInRange;\n    private _updatePages;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;AASA;;;;;;;;;;;AASA;;;;;;;;;;;AASA;;;;;;;;;;;AASA;;;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;"}