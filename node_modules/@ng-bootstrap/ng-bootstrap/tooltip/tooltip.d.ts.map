{"version":3,"file":"tooltip.d.ts","sources":["/Users/jediblue/Workspace/projects/js/angular/thales-leite/node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.d.ts"],"sourcesContent":["import { EventEmitter, OnInit, OnDestroy, Injector, Renderer2, ElementRef, TemplateRef, ViewContainerRef, ComponentFactoryResolver, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { PlacementArray } from '../util/positioning';\nimport { NgbTooltipConfig } from './tooltip-config';\nexport declare class NgbTooltipWindow {\n    id: string;\n    tooltipClass: string;\n}\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nexport declare class NgbTooltip implements OnInit, OnDestroy {\n    private _elementRef;\n    private _renderer;\n    private _ngZone;\n    private _document;\n    private _changeDetector;\n    /**\n     * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\n     *\n     * - true (default): closes on both outside and inside clicks as well as Escape presses\n     * - false: disables the autoClose feature (NB: triggers still apply)\n     * - 'inside': closes on inside clicks as well as Escape presses\n     * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n     * as well as Escape presses\n     *\n     * @since 3.0.0\n     */\n    autoClose: boolean | 'inside' | 'outside';\n    /**\n      * Placement of a tooltip accepts:\n      *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n      *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\",\n      *  array or a space separated string of above values\n      */\n    placement: PlacementArray;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of event names.\n     */\n    triggers: string;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     * Currently only supports \"body\".\n     */\n    container: string;\n    /**\n     * A flag indicating if a given tooltip is disabled and should not be displayed.\n     *\n     * @since 1.1.0\n     */\n    disableTooltip: boolean;\n    /**\n     * An optional class applied to ngb-tooltip-window\n     *\n     * @since 3.2.0\n     */\n    tooltipClass: string;\n    /**\n     * Opening delay in ms. Works only for non-manual opening triggers.\n     *\n     * @since 4.1.0\n     */\n    openDelay: number;\n    /**\n     * Closing delay in ms. Works only for non-manual closing triggers.\n     *\n     * @since 4.1.0\n     */\n    closeDelay: number;\n    /**\n     * Emits an event when the tooltip is shown\n     */\n    shown: EventEmitter<{}>;\n    /**\n     * Emits an event when the tooltip is hidden\n     */\n    hidden: EventEmitter<{}>;\n    private _ngbTooltip;\n    private _ngbTooltipWindowId;\n    private _popupService;\n    private _windowRef;\n    private _unregisterListenersFn;\n    private _zoneSubscription;\n    constructor(_elementRef: ElementRef<HTMLElement>, _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig, _ngZone: NgZone, _document: any, _changeDetector: ChangeDetectorRef);\n    /**\n     * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n     */\n    ngbTooltip: string | TemplateRef<any>;\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * The context is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context?: any): void;\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    close(): void;\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    toggle(): void;\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    isOpen(): boolean;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;"}