{"version":3,"file":"modal.d.ts","sources":["/Users/jediblue/Workspace/projects/js/angular/thales-leite/node_modules/@ng-bootstrap/ng-bootstrap/modal/modal.d.ts"],"sourcesContent":["import { Injector, ComponentFactoryResolver } from '@angular/core';\nimport { NgbModalOptions, NgbModalConfig } from './modal-config';\nimport { NgbModalRef } from './modal-ref';\nimport { NgbModalStack } from './modal-stack';\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\nexport declare class NgbModal {\n    private _moduleCFR;\n    private _injector;\n    private _modalStack;\n    private _config;\n    constructor(_moduleCFR: ComponentFactoryResolver, _injector: Injector, _modalStack: NgbModalStack, _config: NgbModalConfig);\n    /**\n     * Opens a new modal window with the specified content and using supplied options. Content can be provided\n     * as a TemplateRef or a component type. If you pass a component type as content, then instances of those\n     * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n     * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n     */\n    open(content: any, options?: NgbModalOptions): NgbModalRef;\n    /**\n     * Dismiss all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason?: any): void;\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals(): boolean;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;"}