{"version":3,"file":"ngb-time-adapter.d.ts","sources":["/Users/jediblue/Workspace/projects/js/angular/thales-leite/node_modules/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.d.ts"],"sourcesContent":["import { NgbTimeStruct } from './ngb-time-struct';\nexport declare function NGB_DATEPICKER_TIME_ADAPTER_FACTORY(): NgbTimeStructAdapter;\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\nexport declare abstract class NgbTimeAdapter<T> {\n    /**\n     * Converts user-model date into an NgbTimeStruct for internal use in the library\n     */\n    abstract fromModel(value: T): NgbTimeStruct;\n    /**\n     * Converts internal time value NgbTimeStruct to user-model date\n     * The returned type is supposed to be of the same type as fromModel() input-value param\n     */\n    abstract toModel(time: NgbTimeStruct): T;\n}\nexport declare class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time: NgbTimeStruct): NgbTimeStruct;\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time: NgbTimeStruct): NgbTimeStruct;\n}\n"],"names":[],"mappings":"AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;AAUA;"}