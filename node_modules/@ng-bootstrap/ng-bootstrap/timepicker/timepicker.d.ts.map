{"version":3,"file":"timepicker.d.ts","sources":["/Users/jediblue/Workspace/projects/js/angular/thales-leite/node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.d.ts"],"sourcesContent":["import { ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NgbTime } from './ngb-time';\nimport { NgbTimepickerConfig } from './timepicker-config';\nimport { NgbTimeAdapter } from './ngb-time-adapter';\n/**\n * A lightweight & configurable timepicker directive.\n */\nexport declare class NgbTimepicker implements ControlValueAccessor, OnChanges {\n    private readonly _config;\n    private _ngbTimeAdapter;\n    private _cd;\n    disabled: boolean;\n    model: NgbTime;\n    private _hourStep;\n    private _minuteStep;\n    private _secondStep;\n    /**\n     * Whether to display 12H or 24H mode.\n     */\n    meridian: boolean;\n    /**\n     * Whether to display the spinners above and below the inputs.\n     */\n    spinners: boolean;\n    /**\n     * Whether to display seconds input.\n     */\n    seconds: boolean;\n    /**\n     * Number of hours to increase or decrease when using a button.\n     */\n    hourStep: number;\n    /**\n     * Number of minutes to increase or decrease when using a button.\n     */\n    minuteStep: number;\n    /**\n     * Number of seconds to increase or decrease when using a button.\n     */\n    secondStep: number;\n    /**\n     * To make timepicker readonly\n     */\n    readonlyInputs: boolean;\n    /**\n     * To set the size of the inputs and button\n     */\n    size: 'small' | 'medium' | 'large';\n    constructor(_config: NgbTimepickerConfig, _ngbTimeAdapter: NgbTimeAdapter<any>, _cd: ChangeDetectorRef);\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    setDisabledState(isDisabled: boolean): void;\n    changeHour(step: number): void;\n    changeMinute(step: number): void;\n    changeSecond(step: number): void;\n    updateHour(newVal: string): void;\n    updateMinute(newVal: string): void;\n    updateSecond(newVal: string): void;\n    toggleMeridian(): void;\n    formatHour(value: number): string;\n    formatMinSec(value: number): string;\n    readonly isSmallSize: boolean;\n    readonly isLargeSize: boolean;\n    ngOnChanges(changes: SimpleChanges): void;\n    private propagateModelChange;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;"}